#!/bin/bash

set -Eeuo pipefail

start() {
  if ! ./bin/index status | grep -q "running"; then
    echo "Error: index server is not running"
    echo "Try: ./bin/index start"
    exit 1
  elif pgrep -f "flask run --host 0.0.0.0 --port 8000" &> /dev/null; then
    echo "Error: search server is already running"
    exit 1
  elif [ ! -f "var/index.sqlite3" ]; then
    echo "Error: can't find search database var/index.sqlite3"
    echo "Try: ./bin/indexdb create"
    exit 1
  else
    echo "starting index server ..."
    mkdir -p var/log
    rm -f var/log/search.log
    FLASK_APP=search flask run --host 0.0.0.0 --port 8000 &> var/log/search.log &
  fi
}

stop() {
  echo "stopping search server ..."
  pkill -f "flask run --host 0.0.0.0 --port 8000" || true
}

status() {
  if pgrep -f "flask run --host 0.0.0.0 --port 8000" &> /dev/null; then
    echo "search server running"
  else
    echo "search server stopped"
    exit 1
  fi
}

if [ $# -ne 1 ]; then
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "start")
    start
    ;;

  "stop")
    # Detect GNU vs BSD netcat. We need netcat to close the connection after
    # sending a message, which requires different options.
    stop
    ;;

  "status")
    status
    ;;

  "restart")
    stop
    start
    ;;
esac
